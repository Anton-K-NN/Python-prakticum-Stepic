'''
 Как мы выяснили, Шифр Цезаря даёт очень слабую защиту текста от несанкционированного доступа (согласно Вики враги Цезаря если и не могли взломать его шифр, то скорее от того что были в принципе неграмотны).

Но то, что не даёт 1 шифр Цезаря, возможно дадут несколько?

Жюль Верн в книге "Жангада. Восемьсот льё по Амазонке" пишет:

   Судья Жаррикес сел за стол, взял лист бумаги, карандаш и сказал:
   — Давайте возьмем фразу, все равно какую, ну хотя бы вот эту: «У судьи Жаррикеса проницательный ум». Теперь я напишу ее, оставляя пробелы между словами, вот так:

   У СУДЬИ ЖАРРИКЕСА ПРОНИЦАТЕЛЬНЫЙ УМ

   Написав, судья, считавший, по-видимому, это изречение непреложным, посмотрел Маноэлю в глаза и сказал:
   — А теперь я возьму наудачу какое-нибудь число, чтобы сделать из этой фразы криптограмму. Предположим, что число состоит из трех цифр, например 4, 2 и 3. Я подписываю это число 423 под
   строчкой так, чтобы под каждой буквой стояла цифра, и повторяю число, пока не дойду до конца фразы. Вот что получится:

   У СУДЬИ ЖАРРИКЕСА ПРОНИЦАТЕЛЬНЫЙ УМ
   4 23423 423423423 42342342342342 34

   Затем, молодой человек, возьмем азбуку и будем заменять каждую букву нашей фразы той буквой, которая стоит после нее в алфавитном порядке на месте, указанном цифрой. Например, если под буквой А стоит цифра 3, вы отсчитываете три буквы и заменяете ее буквой Г. Итак, вот что мы получим:

   У — 4 = Ч
   С — 2 = У
   У — 3 = Ц
   Д — 4 = И
   Ь — 2 = Ю
   И — 3 = Л

   Если буква находится в конце алфавита и к ней нельзя прибавить нужного числа букв, тогда отсчитывают недостающие буквы с начала азбуки. Например, буква Я в алфавите последняя. Если под ней стоит цифра 3, то счет начинают с буквы А, и тогда Я заменяется буквой В.
   Доведем до конца начатую криптограмму, построенную на числе 423 — взятом произвольно, не забудьте! — и фраза, которую вы знаете, заменится следующей:

   ЧУЦИЮЛКВУФКНЙУГУТССКЩДФИПЮРЯЛЦР

   Теперь, молодой человек, хорошенько рассмотрите эту фразу. Разве она не выглядит точь-в-точь как те, что вы видели в
   документе? Что же из этого следует? Что значение каждой буквы определяется случайно поставленной под нею цифрой, и буква в
   криптограмме никогда не обозначает одной и той же буквы текста. Взгляните: в нашей фразе первое У обозначено буквой Ч, а второе буквой Ц; первое И обозначено буквой Л, а второе — К;
   первое А обозначено буквой В, второе — Ч, а третье — Ц. В моем имени одно Р заменено буквой У, а другое — Ф.
   Теперь вам ясно, что если бы вы не знали числа 423, вам никогда не удалось бы прочесть этой строчки, и, следовательно, если мы не знаем числа, на котором основан документ, мы никогда не сможем его расшифровать!
На самом деле конечно в современном мире всё не так категорично, но об этом как-нибудь потом...

Удобство такого метода так же очевидно, т.к. хранение "ключа" не значительно усложняется. Ключом может служить дата или год, что безусловно упрощает взлом, если вы знакомы с шифрующим, но успех уже нельзя гарантировать всего за 26 попыток перебора для английского языка.

 Реализуйте функцию jarriquez_encryption(text, key, alphabet='ABCDEFGHIJKLMNOPQRSTUVWXYZ', reverse=False), возвращающую зашифрованный текст, по алгоритму описанному на предыдущем шаге.

text - исходный текст
key - ключ шифрования (число)
alphabet - алфавит (по умолчанию английский)
reverced - признак расшифровки, если находится в значении True, это значит, что функцию надо использовать для расшифровки текста,
т.к. каждый сдвиг должен быть отрицательным. (по умолчанию False)
Из преобразуемого текста удаляются все пробелы и знаки препинания. Зашифрованный текст пишется в верхнем регистре 1 строкой.



Примечание. В этой задаче не нужно ничего считывать и ничего выводить на печать. Только реализовать функцию.

Sample Input 1:

У СУДЬИ ЖАРРИКЕСА ПРОНИЦАТЕЛЬНЫЙ УМ
423
АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯ
reverse=False
Sample Output 1:

ЧУЦИЮЛКВУФКНЙУГУТССКЩДФИПЮРЯЛЦР
Sample Input 2:

ЧУЦИЮЛКВУФКНЙУГУТССКЩДФИПЮРЯЛЦР
423
АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯ
reverse=True
Sample Output 2:

УСУДЬИЖАРРИКЕСАПРОНИЦАТЕЛЬНЫЙУМ
Sample Input 3:

Some encripted text for this assignment
26101986
Sample Output 3:

UUNEFWKXKVUEECMDVLPRUQQYCYTIHWUKPZ
Sample Input 4:

UUNEFWKXKVUEECMDVLPRUQQYCYTIHWUKPZ
26101986

reverse=True
Sample Output 4:

SOMEENCRIPTEDTEXTFORTHISASSIGNMENT
'''

def jarriquez_encryption(text, key, alphabet='ABCDEFGHIJKLMNOPQRSTUVWXYZ', reverse=False):
    t = text.upper().split()
    tr = ''.join(t)
    ntr=''
    n=0
    if reverse==True:
        for i in range(len(tr)):
            if n <= (len(str(key)) - 1):
                ntr = ntr + alphabet[(alphabet.index(tr[i]) - int(str(key)[n])) % len(alphabet)]
                n += 1
            else:
                n = 0
                ntr = ntr + alphabet[(alphabet.index(tr[i]) - int(str(key)[n])) % len(alphabet)]
                n += 1
        #print(ntr)
    else:
        for i in range(len(tr)):
            if n <= (len(str(key)) - 1):
                ntr = ntr + alphabet[(alphabet.index(tr[i]) + int(str(key)[n])) % len(alphabet)]
                n += 1
            else:
                n = 0
                ntr = ntr + alphabet[(alphabet.index(tr[i]) + int(str(key)[n])) % len(alphabet)]
                n += 1
        #print(ntr)
    return ntr

tex=input()
k=int(input())

print(jarriquez_encryption(tex, k,alphabet='АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯ', reverse=True))

